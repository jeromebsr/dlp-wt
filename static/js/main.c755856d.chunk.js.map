{"version":3,"sources":["components/Schedule.js","components/WaitTime.js","App.js","index.js"],"names":["Schedule","_useState","useState","_useState2","Object","slicedToArray","disneyParkData","setDisneyParkData","_useState3","_useState4","studioParkData","setStudioParkData","useEffect","axios","get","then","res","data","schedule","console","log","react_default","a","createElement","Container","className","class","dateFormat","Date","now","Card","border","style","width","Header","Body","Text","Badge","bg","filter","date","type","map","el","Fragment","openingTime","closingTime","WaitTime","entity","setEntity","waitTimeId","setWaitTimeId","_useState5","_useState6","waitTimeMin","setWaitTimeMin","_useState7","_useState8","WaitTimeMax","setWaitTimeMax","_useState9","_useState10","setData","_useState11","_useState12","setFilter","_useState13","_useState14","filterStatus","setFilterStatus","waitTimeColor","wt","setColor","concat","liveData","ButtonGroup","id","name","park","Button","key","variant","onClick","Col","btnStyle","min","max","wl","Form","Control","size","placeholder","onChange","e","target","value","ListGroup","includes","dataFilter","arr","split","i","length","charAt","toUpperCase","slice","join","formatFilter","queue","STANDBY","waitTime","status","sort","b","Item","parkId","Alert","App","Row","md","components_WaitTime","components_Schedule","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c755856d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Card, Badge } from 'react-bootstrap';\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nfunction Schedule() {\r\n    const [disneyParkData, setDisneyParkData] = useState([]);\r\n    const [studioParkData, setStudioParkData] = useState([]);\r\n\r\n    const getToday = () => {\r\n        disneyParkData.map((el) => (\r\n           dateFormat(disneyParkData.date, \"dd-mm-yyyy\")\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"https://api.themeparks.wiki/v1/entity/dae968d5-630d-4719-8b06-3d107e944401/schedule\")\r\n            .then((res) => setDisneyParkData(res.data.schedule))\r\n\r\n        axios\r\n            .get(\"https://api.themeparks.wiki/v1/entity/ca888437-ebb4-4d50-aed2-d227f7096968/schedule\")\r\n            .then((res) => setStudioParkData(res.data.schedule))\r\n    }, []);\r\n    console.log(disneyParkData)\r\n    return (\r\n        <Container className='mt-5'>\r\n            <h4><i class=\"fa-solid fa-calendar-days\"></i> <b>Aujourd'hui</b></h4>\r\n            <p className='offset-1'><b>{dateFormat(Date.now(), \"dd/mm/yyyy\")}</b></p>\r\n            <Card className='mb-3' border=\"primary\" style={{ width: '18rem' }}>\r\n                <Card.Header><b><i class=\"fa-solid fa-wand-magic-sparkles\"></i> Parc Disneyland</b></Card.Header>\r\n                <Card.Body>\r\n                <Card.Text>\r\n                <h5><Badge bg=\"info\">Horaires</Badge></h5>\r\n                    {\r\n                        disneyParkData\r\n                        .filter((data) => dateFormat(data.date, \"dd-mm-yyyy\") === dateFormat(Date.now(), \"dd-mm-yyyy\"))\r\n                        .filter((data) => data.type === \"OPERATING\")\r\n                        .map((el) => (\r\n                            <>\r\n                            <p><i class=\"fa-solid fa-clock\"></i> De <b>{dateFormat(el.openingTime, \"HH:MM\")}</b> Ã  <b>{dateFormat(el.closingTime, \"HH:MM\")}</b></p>\r\n                            </>\r\n                        ))\r\n                    }\r\n                    <h5><Badge bg=\"info\">Heure de Magie</Badge></h5>\r\n                    {\r\n                        disneyParkData\r\n                        .filter((data) => dateFormat(data.date, \"dd-mm-yyyy\") === dateFormat(Date.now(), \"dd-mm-yyyy\"))\r\n                        .filter((data) => data.type === \"EXTRA_HOURS\")\r\n                        .map((el) => (\r\n                            <>\r\n                            <p><i class=\"fa-solid fa-clock\"></i> De <b>{dateFormat(el.openingTime, \"HH:MM\")}</b> Ã  <b>{dateFormat(el.closingTime, \"HH:MM\")}</b></p>\r\n                            </>\r\n                        ))\r\n                    }\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className='mb-3' border=\"primary\" style={{ width: '18rem' }}>\r\n                <Card.Header><b><i class=\"fa-solid fa-film\"></i> Parc Walt Disney Studios</b></Card.Header>\r\n                <Card.Body>\r\n                <Card.Text>\r\n                <h5><Badge bg=\"info\">Horaires</Badge></h5>\r\n                    {\r\n                        studioParkData\r\n                        .filter((data) => dateFormat(data.date, \"dd-mm-yyyy\") === dateFormat(Date.now(), \"dd-mm-yyyy\"))\r\n                        .filter((data) => data.type === \"OPERATING\")\r\n                        .map((el) => (\r\n                            <>\r\n                            <p><i class=\"fa-solid fa-clock\"></i> De <b>{dateFormat(el.openingTime, \"HH:MM\")}</b> Ã  <b>{dateFormat(el.closingTime, \"HH:MM\")}</b></p>\r\n                            </>\r\n                        ))\r\n                    }\r\n                    <h5><Badge bg=\"info\">Heure de Magie</Badge></h5>\r\n                    {\r\n                        studioParkData\r\n                        .filter((data) => dateFormat(data.date, \"dd-mm-yyyy\") === dateFormat(Date.now(), \"dd-mm-yyyy\"))\r\n                        .filter((data) => data.type === \"EXTRA_HOURS\")\r\n                        .map((el) => (\r\n                            <>\r\n                            <p><i class=\"fa-solid fa-clock\"></i> De <b>{dateFormat(el.openingTime, \"HH:MM\")}</b> Ã  <b>{dateFormat(el.closingTime, \"HH:MM\")}</b></p>\r\n                            </>\r\n                        ))\r\n                    }\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Schedule;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Alert, ListGroup, Button, ButtonGroup, Form, Col } from 'react-bootstrap';\r\n\r\nfunction WaitTime() {\r\n    const [entity, setEntity] = useState(\"e8d0207f-da8a-4048-bec8-117aa946b2c2\");\r\n    const [waitTimeId, setWaitTimeId] = useState(1);\r\n    const [waitTimeMin, setWaitTimeMin] = useState(0);\r\n    const [WaitTimeMax, setWaitTimeMax] = useState(900);\r\n    const [data, setData] = useState([]);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const [filterStatus, setFilterStatus] = useState(\"OPERATING\");\r\n    \r\n    const parksList = [\r\n        {\r\n            id: \"e8d0207f-da8a-4048-bec8-117aa946b2c2\",\r\n            name: \"Tous les Parcs\",\r\n        },\r\n        {\r\n            id: \"dae968d5-630d-4719-8b06-3d107e944401\",\r\n            name: \"Parc Disneyland\",\r\n        },\r\n        {\r\n            id: \"ca888437-ebb4-4d50-aed2-d227f7096968\",\r\n            name: \"Parc Walt Disney Studios\",\r\n        },\r\n    ];\r\n\r\n    const waitTimeList = [\r\n        {\r\n            id: 1,\r\n            name: \"Tous les temps\",\r\n            btnStyle: \"primary\",\r\n            min: 0,\r\n            max: 900\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Moins de 15 min\",\r\n            btnStyle: \"success\",\r\n            min: 0,\r\n            max: 15\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Entre 15 et 45 min\",\r\n            btnStyle: \"warning\",\r\n            min: 15,\r\n            max: 45\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Plus de 45 min\",\r\n            btnStyle: \"danger\",\r\n            min: 45,\r\n            max: 900\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"FermÃ©\",\r\n            btnStyle: \"secondary\",\r\n            min: null,\r\n            max: null\r\n        },\r\n    ];\r\n\r\n    const parkName = (id) => {\r\n        if(id === \"dae968d5-630d-4719-8b06-3d107e944401\") {\r\n            return \"Parc Disneyland\"\r\n        }else if (id === \"ca888437-ebb4-4d50-aed2-d227f7096968\") {\r\n            return \"Parc Walt Disney Studios\"\r\n        }else {\r\n            return \"error\";\r\n        }\r\n    }\r\n\r\n    const waitTimeColor = (wt) => {\r\n        let setColor = \"dark\";\r\n\r\n        if(wt > 0) {\r\n            if(wt <= 15) {\r\n                setColor = \"success\";\r\n            }else if(wt > 15 && wt <= 45) {\r\n                setColor = \"warning\";\r\n            }else if (wt > 45) {\r\n                setColor = \"danger\";\r\n            }\r\n        }else if(wt === 0) {\r\n            setColor = \"success\";\r\n        }else {\r\n            setColor = \"secondary\"\r\n        }\r\n\r\n        return setColor;\r\n    }\r\n\r\n    const displayWaitTime = (wt) => {\r\n        if(wt === null) {\r\n            return \"FermÃ©\";\r\n        }else if (wt === 0) {\r\n            return \"Ouvert\";\r\n        } else {\r\n            return wt + \" minutes\";\r\n        }\r\n    }\r\n\r\n    const formatFilter = (dataFilter) => {\r\n        const arr = dataFilter.split(\" \");\r\n\r\n        for(let i = 0; i < arr.length; i++) {\r\n            if(arr[i].charAt(0))\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n\r\n        return arr.join(\" \");\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://api.themeparks.wiki/v1/entity/${entity}/live`)\r\n            .then((res) => setData(res.data.liveData))\r\n    });\r\n\r\n    return (\r\n        <Container className='mt-5 mb-5'>\r\n            <h6>Choisir un parc :</h6>\r\n            <ButtonGroup>\r\n                {\r\n                    parksList.map((park) => (\r\n                        <Button\r\n                            key={park.id}\r\n                            variant={park.id === entity ? \"primary\" : \"outline-primary\"}\r\n                            onClick={() => {\r\n                                setEntity(park.id);\r\n                            }}\r\n                        >\r\n                            {park.name}        \r\n                        </Button>\r\n                    ))\r\n                }\r\n            </ButtonGroup>\r\n            <Col className='mt-2'>\r\n                <h6>Trier par temps d'attente :</h6>\r\n                <ButtonGroup>\r\n                   {\r\n                       waitTimeList.map((wl) => (\r\n                           <Button\r\n                                key={wl.id}\r\n                                variant={wl.id === waitTimeId ? wl.btnStyle : \"outline-\"+wl.btnStyle}\r\n                                onClick={() => {\r\n                                    setWaitTimeId(wl.id);\r\n                                    \r\n                                    if(wl.min === null) {\r\n                                        setFilterStatus(\"CLOSED\")\r\n                                    }else {\r\n                                        setFilterStatus(\"OPERATING\")\r\n                                        setWaitTimeMin(wl.min);\r\n                                        setWaitTimeMax(wl.max);\r\n                                    }\r\n                                }}\r\n                           >\r\n                               {wl.name}\r\n                           </Button>\r\n\r\n                       ))\r\n                   }\r\n                </ButtonGroup>\r\n            </Col>\r\n            <Col className='mt-4'>\r\n            <Form>\r\n                <Form.Control \r\n                    size=\"lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"Chercher une attraction...\" \r\n                    onChange={(e) => (setFilter(e.target.value))}\r\n                />\r\n            </Form>\r\n            </Col>\r\n            {\r\n                <ListGroup className='mt-5'> \r\n                    {\r\n                    data\r\n                    .filter((data) => data.name.includes(formatFilter(filter)))\r\n                    .filter((data) => filterStatus === \"OPERATING\" ? data.queue.STANDBY.waitTime > waitTimeMin && data.queue.STANDBY.waitTime < WaitTimeMax : data.status.includes(filterStatus))\r\n                    .sort((a,b) => (a.queue.STANDBY.waitTime - b.queue.STANDBY.waitTime))\r\n                    .map((el) => (\r\n                        <ListGroup.Item key={el.id}>\r\n                            <h2>{el.name}</h2>\r\n                            <h5>{parkName(el.parkId)}</h5>\r\n                            <Alert variant={waitTimeColor(el.queue.STANDBY.waitTime)}>\r\n                                <i className=\"fa-solid fa-clock\"></i> <b>{displayWaitTime(el.queue.STANDBY.waitTime)}</b>\r\n                            </Alert>\r\n                        </ListGroup.Item>   \r\n                    ))}\r\n                </ListGroup>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WaitTime;\r\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Schedule from './components/Schedule';\nimport WaitTime from './components/WaitTime';\n\n\nfunction App() {\n  return (\n    <Container>\n      <Row>\n        <Col md={8}>\n          <WaitTime />\n        </Col>\n        <Col md={4}>\n          <Schedule />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/styles/globals.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}